package jdbcgui;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JFrame;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author sean
 */
//extends BookFlight
public class SelectFlight extends BookFlight {

    /**
     * Creates new form AddEmployee
     */
    myDBCon dbCon;
    ResultSet rs;

    public SelectFlight(String origin, String destination) {
        initComponents();
        //this.setLocationRelativeTo(null); // center form in screen 
        // set all error labels to invisible
        /*lblBookingError.setVisible(false);
        lblFlightError.setVisible(false);
        lblDateError.setVisible(false);
        lblJobError.setVisible(false);
        lblSalaryError.setVisible(false);
        */

        try {//populate mgr and deptno combo boxes 
            // populate valid mgr numbers 
            dbCon = new myDBCon();
            //rs= dbCon.executeStatement("SELECT Booking#,FlightCode,FlightDate,Origin, Destination, duration FROM BOOKING WHERE Origin = '" + BookFlight.origin + "' AND Destination = '" +  BookFlight.dest+"'");
            
            rs= dbCon.executeStatement("SELECT A.Booking#,B.FlightCode ,A.FlightDate,A.Origin,A.Destination, A.duration FROM BOOKING A, Flight B WHERE Origin = '" + origin + "' AND A.FlightCode=B.FlightCode AND Destination = '" +  destination+"'");
            // populate mgr combo box
           
            while (rs.next()) {
               populateFields();
            }
            // get and populate the remaining
            rs = dbCon.executeStatement("SELECT empid FROM employee_airport ORDER BY empid ASC");
            rs.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblempid = new javax.swing.JLabel();
        lblfname = new javax.swing.JLabel();
        lblJob = new javax.swing.JLabel();
        lblSal = new javax.swing.JLabel();
        lblLname = new javax.swing.JLabel();
        txtBooking = new javax.swing.JTextField();
        txtFlight = new javax.swing.JTextField();
        txtOrigin = new javax.swing.JTextField();
        txtDuration = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        btnBook = new javax.swing.JButton();
        txtDestination = new javax.swing.JTextField();
        lblJob1 = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();

        setTitle("Add New Employee");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Book Flight");

        lblempid.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblempid.setText("Booking#: ");

        lblfname.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblfname.setText("Flight Code");

        lblJob.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblJob.setText("Origin:");

        lblSal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSal.setText("Duration:");

        lblLname.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblLname.setText("Flight Date");

        txtBooking.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtFlight.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtOrigin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtOrigin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOriginActionPerformed(evt);
            }
        });

        txtDuration.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtDate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnBook.setFont(new java.awt.Font("Forte", 0, 24)); // NOI18N
        btnBook.setText("Book Flight");
        btnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookActionPerformed(evt);
            }
        });

        txtDestination.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtDestination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDestinationActionPerformed(evt);
            }
        });

        lblJob1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblJob1.setText("Destination:");

        btnNext.setFont(new java.awt.Font("Forte", 0, 24)); // NOI18N
        btnNext.setText("Next>>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setFont(new java.awt.Font("Forte", 0, 24)); // NOI18N
        btnPrevious.setText("<<Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(242, 242, 242)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblfname)
                                .addComponent(lblempid)
                                .addComponent(lblJob)
                                .addComponent(lblLname)
                                .addComponent(btnPrevious))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblJob1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblSal, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(txtBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtOrigin)
                                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDestination)
                                    .addComponent(txtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(btnBook)
                                .addGap(31, 31, 31)
                                .addComponent(btnNext))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(169, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblempid)
                    .addComponent(txtBooking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblfname)
                    .addComponent(txtFlight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblJob)
                    .addComponent(txtOrigin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblJob1)
                    .addComponent(txtDestination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSal)
                    .addComponent(txtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBook)
                    .addComponent(btnNext)
                    .addComponent(btnPrevious))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtOriginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOriginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOriginActionPerformed

    // verify valid entry of integer values
    public boolean isInteger(String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    // verify valid entry of double values
    public boolean isDouble(String s) {
        try {
            Double.parseDouble(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    /*void clearErrorLabels() { // clear all labels used to display error messages 
        lblBookingError.setText("");
        lblBookingError.setVisible(false);
        lblFlightError.setText("");
        lblFlightError.setVisible(false);
        lblDateError.setText("");
        lblDateError.setVisible(false);
        lblJobError.setText("");
        lblJobError.setVisible(false);
        lblSalaryError.setText("");
        lblSalaryError.setVisible(false);
       
    }*/

    // validate all user entry before sending new employee details to DB
    /*boolean isValidData() {
        clearErrorLabels();
        boolean result = true; // assume all details are true, set to false if otherwise 
        // you need to check format deails and make sure they are consistent with DB 
        if (txtBooking.getText().trim().isEmpty() || !isInteger(txtBooking.getText().trim())) {
            if (txtBooking.getText().trim().isEmpty()) {
                lblBookingError.setText("Invalid. Cannot be empty.");
            } else if (!isInteger(txtBooking.getText().trim())) {
                lblBookingError.setText("Invalid. Must be integer.");
            }
            lblBookingError.setVisible(true);
            result = false;
        }

        if (txtFlight.getText().trim().isEmpty() || (txtFlight.getText().trim().length() > 10)) {
            if (txtFlight.getText().trim().isEmpty()) {
                lblFlightError.setText("Invalid. Cannot be empty.");
            } else if ((txtFlight.getText().trim().length() > 10)) {
                lblFlightError.setText("Invalid. Must be < 10 chars.");
            }
            lblFlightError.setVisible(true);
            result = false;
        }
        
        if (txtDate.getText().trim().isEmpty() || (txtDate.getText().trim().length() > 10)) {
            if (txtDate.getText().trim().isEmpty()) {
                lblDateError.setText("Invalid. Cannot be empty.");
            } else if ((txtDate.getText().trim().length() > 10)) {
                lblDateError.setText("Invalid. Must be < 10 chars.");
            }
            lblDateError.setVisible(true);
            result = false;
        }

        if (txtOrigin.getText().trim().isEmpty() || (txtOrigin.getText().trim().length() > 10)) {
            if (txtOrigin.getText().trim().isEmpty()) {
                lblDateError.setText("Invalid. Cannot be empty.");
            } else if (txtOrigin.getText().trim().length() > 10) {
                lblDateError.setText("Invalid. Must be < 10 chars.");
            }
            lblDateError.setVisible(true);
            result = false;
        }


        if (txtDuration.getText().trim().isEmpty() || !(isInteger(txtDuration.getText().trim()) || isDouble(txtDuration.getText().trim()))) {
            if (txtDuration.getText().trim().isEmpty()) {
                lblSalaryError.setText("Invalid. Cannot be empty.");
            } else if (!(isInteger(txtDuration.getText().trim()) || isDouble(txtDuration.getText().trim()))) {
                lblSalaryError.setText("Invalid. Must be number.");
            }
            lblSalaryError.setVisible(true);
            result = false;
        }

       

        return result;
    }*/

    void clearInputBoxes() { // clear for every new entry 
        txtBooking.setText("");
        txtFlight.setText("");
        txtOrigin.setText("");
        txtDuration.setText("");
        txtDate.setText("");
        
    }

    private boolean isDuplicate(int empno) throws SQLException {
        boolean isduplicate = false;
        String stmtSQL = "SELECT empno FROM emp WHERE empno = " + empno;
        rs = dbCon.executeStatement(stmtSQL);
        // isBeforeFirst() returns false if there are no data in the resultset
        isduplicate = rs.isBeforeFirst();

        return isduplicate;
    }
    

    
    
    private void btnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookActionPerformed
        // TODO add your handling code here:

        try {                    
            if (!isDuplicate(Integer.parseInt(txtBooking.getText().trim()))) {
                // if new employee details are valid, then add new employee to DB

                /*String prepSQL = "INSERT INTO employee_airport (empid, Firstname, Lastname,Job, salary, Flightcode) VALUES ("
                        + txtBooking.getText().trim() + ", "
                        + "'" + txtFlight.getText().toUpperCase() + "', "
                        + "'" + txtDate.getText().toUpperCase() + "', "
                        + "'" + txtOrigin.getText().toUpperCase() + "', "
                        + txtDuration.getText() + ")"                                          
                        ;*/
                String prepSQL = "INSERT INTO booking_reservations (booking#, FlightCode,Passenger#, seat#) VALUES ("
                        + txtBooking.getText().trim() + ", "
                        + "'" + txtFlight.getText().toUpperCase() + "', "
                        + "'" + txtDate.getText().toUpperCase() + "', "
                        + "'" + txtOrigin.getText().toUpperCase() + "', "
                        + txtDuration.getText() + ")"                                          
                        ;

                int result = dbCon.executePrepared(prepSQL);
                
        
        
                if (result > 0) {

                    javax.swing.JLabel label = new javax.swing.JLabel("New employee added successfully.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                    clearInputBoxes();
                } else {

                }
                this.dispose();
 (new AddPassengers()).setVisible(true);
                rs.close();
            } else {
                if (!isDuplicate(Integer.parseInt(txtBooking.getText().trim()))) {
                    javax.swing.JLabel label = new javax.swing.JLabel("Please fix validation errors...");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
                } else {
                    javax.swing.JLabel label = new javax.swing.JLabel("Empno Already exists. Use a different employee number.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.INFORMATION_MESSAGE);
                    // check validation errors 
                }

            }
        } catch (SQLException e) {
            //JOptionPane.showMessageDialog(null, "Error adding new employee.");
             javax.swing.JLabel label = new javax.swing.JLabel("Error adding new employee: " + e.getMessage());
            label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
            JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnBookActionPerformed

    private void txtDestinationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDestinationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDestinationActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPreviousActionPerformed


    private void populateFields() {
        try {
             
            txtBooking.setText(rs.getString("Booking#"));
            txtFlight.setText(rs.getString("FlightCode"));
            txtDuration.setText(rs.getString("Duration"));
            txtDate.setText(rs.getString("FlightDate"));          
            txtOrigin.setText(rs.getString("Origin"));      
            txtDestination.setText(rs.getString("Destination"));      
            EnableDisableButtons();
        } catch (SQLException ex) {
           // Logger.getLogger(UpdateDeleteEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    private void EnableDisableButtons() {
        try {
            if (rs.isFirst()) {
                btnPrevious.setEnabled(false);
            } else {
                btnPrevious.setEnabled(true);
            }
            if (rs.isLast()) {
                btnNext.setEnabled(false);
            } else {
                btnNext.setEnabled(true);
            }
        } catch (SQLException ex) {
            Logger.getLogger(UpdateDeleteEmployee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBook;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblJob;
    private javax.swing.JLabel lblJob1;
    private javax.swing.JLabel lblLname;
    private javax.swing.JLabel lblSal;
    private javax.swing.JLabel lblempid;
    private javax.swing.JLabel lblfname;
    private javax.swing.JTextField txtBooking;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDestination;
    private javax.swing.JTextField txtDuration;
    private javax.swing.JTextField txtFlight;
    private javax.swing.JTextField txtOrigin;
    // End of variables declaration//GEN-END:variables

}


