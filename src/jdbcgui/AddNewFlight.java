package jdbcgui;

import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author sean
 */
public class AddNewFlight extends javax.swing.JFrame {

    /**
     * Creates new form AddEmployee
     */
    myDBCon dbCon;
    ResultSet rs;

    public AddNewFlight() {
        initComponents();
        this.setLocationRelativeTo(null); // center form in screen 
        // set all error labels to invisible
        lblFlightCodeError.setVisible(false);
        lblAirlineError.setVisible(false);
        lblCapacityError.setVisible(false);
        lblBaseAirportError.setVisible(false);

        try {//populate mgr and deptno combo boxes 
            // populate valid mgr numbers 
            dbCon = new myDBCon();
            
           
            // get and populate the remaining
            rs = dbCon.executeStatement("SELECT flightcode,airline, capacity, baseairport FROM flight ORDER BY flightcode ASC");
            rs.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblempid = new javax.swing.JLabel();
        lblfname = new javax.swing.JLabel();
        lblJob = new javax.swing.JLabel();
        lblSal = new javax.swing.JLabel();
        txtFlightCode = new javax.swing.JTextField();
        txtAirline = new javax.swing.JTextField();
        txtBaseAirport = new javax.swing.JTextField();
        txtCapacity = new javax.swing.JTextField();
        btnAddNewEmp = new javax.swing.JButton();
        lblFlightCodeError = new javax.swing.JLabel();
        lblAirlineError = new javax.swing.JLabel();
        lblBaseAirportError = new javax.swing.JLabel();
        lblCapacityError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add New Employee");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Add New Flight");

        lblempid.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblempid.setText("Flight Code:");

        lblfname.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblfname.setText("Airline:");

        lblJob.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblJob.setText("Base Airport");

        lblSal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSal.setText("Capacity");

        txtFlightCode.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtAirline.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtBaseAirport.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtBaseAirport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBaseAirportActionPerformed(evt);
            }
        });

        txtCapacity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnAddNewEmp.setFont(new java.awt.Font("Forte", 0, 24)); // NOI18N
        btnAddNewEmp.setText("Add New");
        btnAddNewEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewEmpActionPerformed(evt);
            }
        });

        lblFlightCodeError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblFlightCodeError.setForeground(new java.awt.Color(255, 0, 0));
        lblFlightCodeError.setText("error label");

        lblAirlineError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblAirlineError.setForeground(new java.awt.Color(255, 0, 0));
        lblAirlineError.setText("error label");

        lblBaseAirportError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblBaseAirportError.setForeground(new java.awt.Color(255, 0, 0));
        lblBaseAirportError.setText("error label");

        lblCapacityError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblCapacityError.setForeground(new java.awt.Color(255, 0, 0));
        lblCapacityError.setText("error label");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblfname)
                            .addComponent(lblempid)
                            .addComponent(lblJob))
                        .addGap(13, 13, 13)
                        .addComponent(txtFlightCode, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblFlightCodeError, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(lblSal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtAirline, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                .addComponent(txtBaseAirport)
                                .addComponent(txtCapacity))
                            .addComponent(btnAddNewEmp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblAirlineError, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(lblBaseAirportError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCapacityError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(15, 15, 15)))
                .addContainerGap(86, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblempid)
                    .addComponent(txtFlightCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFlightCodeError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblfname)
                    .addComponent(txtAirline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAirlineError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSal)
                    .addComponent(lblCapacityError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblJob)
                    .addComponent(txtBaseAirport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBaseAirportError))
                .addGap(62, 62, 62)
                .addComponent(btnAddNewEmp)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBaseAirportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBaseAirportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBaseAirportActionPerformed

    // verify valid entry of integer values
    public boolean isInteger(String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    // verify valid entry of double values
    public boolean isDouble(String s) {
        try {
            Double.parseDouble(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    void clearErrorLabels() { // clear all labels used to display error messages 
        lblFlightCodeError.setText("");
        lblFlightCodeError.setVisible(false);
        lblAirlineError.setText("");
        lblAirlineError.setVisible(false);
        lblCapacityError.setText("");
        lblCapacityError.setVisible(false);
        lblBaseAirportError.setText("");
        lblBaseAirportError.setVisible(false);
        
    }

    // validate all user entry before sending new employee details to DB
    boolean isValidData() {
        clearErrorLabels();
        boolean result = true; // assume all details are true, set to false if otherwise 
        // you need to check format deails and make sure they are consistent with DB         
        if (txtFlightCode.getText().trim().isEmpty() || (txtFlightCode.getText().trim().length() > 10)) {
            if (txtFlightCode.getText().trim().isEmpty()) {
                lblFlightCodeError.setText("Invalid. Cannot be empty.");
            } else if ((txtFlightCode.getText().trim().length() > 10)) {
                lblFlightCodeError.setText("Invalid. Must be < 10 chars.");
            }
            lblFlightCodeError.setVisible(true);
            result = false;
        }
        
        if (txtAirline.getText().trim().isEmpty() || (txtAirline.getText().trim().length() > 25)) {
            if (txtAirline.getText().trim().isEmpty()) {
                lblAirlineError.setText("Invalid. Cannot be empty.");
            } else if ((txtAirline.getText().trim().length() > 25)) {
                lblAirlineError.setText("Invalid. Must be < 25 chars.");
            }
            lblAirlineError.setVisible(true);
            result = false;
        }
        if (txtCapacity.getText().trim().isEmpty() || !isInteger(txtCapacity.getText().trim())) {
            if (txtCapacity.getText().trim().isEmpty()) {
                lblCapacityError.setText("Invalid. Cannot be empty.");
            } else if (!isInteger(txtCapacity.getText().trim())) {
                lblCapacityError.setText("Invalid. Must be integer.");
            }
            lblCapacityError.setVisible(true);
            result = false;
        }
        

        if (txtBaseAirport.getText().trim().isEmpty() || (txtBaseAirport.getText().trim().length() > 5)) {
            if (txtBaseAirport.getText().trim().isEmpty()) {
                lblBaseAirportError.setText("Invalid. Cannot be empty.");
            } else if (txtBaseAirport.getText().trim().length() > 5) {
                lblBaseAirportError.setText("Invalid. Must be < 5 chars.");
            }
            lblBaseAirportError.setVisible(true);
            result = false;
        }
        return result;
    }

    void clearInputBoxes() { // clear for every new entry 
        txtFlightCode.setText("");
        txtAirline.setText("");
        txtCapacity.setText("");
        txtBaseAirport.setText("");              
    }

    private boolean isDuplicate(int empno) throws SQLException {
        boolean isduplicate = false;
        String stmtSQL = "SELECT empno FROM emp WHERE empno = " + empno;
        rs = dbCon.executeStatement(stmtSQL);
        // isBeforeFirst() returns false if there are no data in the resultset
        isduplicate = rs.isBeforeFirst();

        return isduplicate;
    }

    
    private void btnAddNewEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewEmpActionPerformed
        // TODO add your handling code here:

        try {          
     
            if (isValidData()){
            //if (isValidData() && !isDuplicate(Integer.parseInt(txtFlightCode.getText().trim()))) {
                // if new employee details are valid, then add new employee to DB

                String prepSQL = "INSERT INTO flight (FlightCode, Airlinename, capacity, BaseAirport) VALUES ("
                        + "'"+ txtFlightCode.getText().trim()+"',"
                        +"'"+ txtAirline.getText().trim()+"',"                       
                        +txtCapacity.getText()+","
                        + "'"+ txtBaseAirport.getText().toUpperCase() + "')"                                                                   
                        ;          

                int result = dbCon.executePrepared(prepSQL);
                if (result > 0) {

                    javax.swing.JLabel label = new javax.swing.JLabel("New Flight added successfully.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                    clearInputBoxes();
                } else {

                }

                rs.close();
            } else {
                if (!isDuplicate(Integer.parseInt(txtFlightCode.getText().trim()))) {
                    javax.swing.JLabel label = new javax.swing.JLabel("Please fix validation errors...");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
                } else {
                    javax.swing.JLabel label = new javax.swing.JLabel("Empno Already exists. Use a different employee number.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.INFORMATION_MESSAGE);
                    // check validation errors 
                }

            }
        }/* catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error adding new Flight.");
        }*/
         catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Error adding new Flight: " + e.getMessage());
    e.printStackTrace();
}

    }//GEN-LAST:event_btnAddNewEmpActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewEmp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAirlineError;
    private javax.swing.JLabel lblBaseAirportError;
    private javax.swing.JLabel lblCapacityError;
    private javax.swing.JLabel lblFlightCodeError;
    private javax.swing.JLabel lblJob;
    private javax.swing.JLabel lblSal;
    private javax.swing.JLabel lblempid;
    private javax.swing.JLabel lblfname;
    private javax.swing.JTextField txtAirline;
    private javax.swing.JTextField txtBaseAirport;
    private javax.swing.JTextField txtCapacity;
    private javax.swing.JTextField txtFlightCode;
    // End of variables declaration//GEN-END:variables

}


